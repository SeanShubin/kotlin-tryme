package com.seanshubin.kotlin.tryme.domain.jvmclassformat.two.instructionset

enum class OpCode(val opcode: UByte, val opOpCodeArgs: OpCodeArgs) {
    aaload(0x32u, OpCodeArgs.NONE),
    aastore(0x53u, OpCodeArgs.NONE),
    aconst_null(0x01u, OpCodeArgs.NONE),
    aload(0x19u, OpCodeArgs.LOCAL_VARIABLE_INDEX),
    aload_0(0x2au, OpCodeArgs.NONE),
    aload_1(0x2bu, OpCodeArgs.NONE),
    aload_2(0x2cu, OpCodeArgs.NONE),
    aload_3(0x2du, OpCodeArgs.NONE),
    anewarray(0xbdu, OpCodeArgs.CONSTANT_POOL_INDEX),
    areturn(0xb0u, OpCodeArgs.NONE),
    arraylength(0xbeu, OpCodeArgs.NONE),
    astore(0x3au, OpCodeArgs.LOCAL_VARIABLE_INDEX),
    astore_0(0x4bu, OpCodeArgs.NONE),
    astore_1(0x4cu, OpCodeArgs.NONE),
    astore_2(0x4du, OpCodeArgs.NONE),
    astore_3(0x4eu, OpCodeArgs.NONE),
    athrow(0xbfu, OpCodeArgs.NONE),
    baload(0x33u, OpCodeArgs.NONE),
    bastore(0x54u, OpCodeArgs.NONE),
    bipush(0x10u, OpCodeArgs.BYTE_VALUE),
    caload(0x34u, OpCodeArgs.NONE),
    castore(0x55u, OpCodeArgs.NONE),
    checkcast(0xc0u, OpCodeArgs.CONSTANT_POOL_INDEX),
    d2f(0x90u, OpCodeArgs.NONE),
    d2i(0x8eu, OpCodeArgs.NONE),
    d2l(0x8fu, OpCodeArgs.NONE),
    dadd(0x63u, OpCodeArgs.NONE),
    daload(0x31u, OpCodeArgs.NONE),
    dastore(0x52u, OpCodeArgs.NONE),
    dcmpg(0x98u, OpCodeArgs.NONE),
    dcmpl(0x97u, OpCodeArgs.NONE),
    dconst_0(0x0eu, OpCodeArgs.NONE),
    dconst_1(0x0fu, OpCodeArgs.NONE),
    ddiv(0x6fu, OpCodeArgs.NONE),
    dload(0x18u, OpCodeArgs.LOCAL_VARIABLE_INDEX),
    dload_0(0x26u, OpCodeArgs.NONE),
    dload_1(0x27u, OpCodeArgs.NONE),
    dload_2(0x28u, OpCodeArgs.NONE),
    dload_3(0x29u, OpCodeArgs.NONE),
    dmul(0x6bu, OpCodeArgs.NONE),
    dneg(0x77u, OpCodeArgs.NONE),
    drem(0x73u, OpCodeArgs.NONE),
    dreturn(0xafu, OpCodeArgs.NONE),
    dstore(0x39u, OpCodeArgs.LOCAL_VARIABLE_INDEX),
    dstore_0(0x47u, OpCodeArgs.NONE),
    dstore_1(0x48u, OpCodeArgs.NONE),
    dstore_2(0x49u, OpCodeArgs.NONE),
    dstore_3(0x4au, OpCodeArgs.NONE),
    dsub(0x67u, OpCodeArgs.NONE),
    dup(0x59u, OpCodeArgs.NONE),
    dup_x1(0x5au, OpCodeArgs.NONE),
    dup_x2(0x5bu, OpCodeArgs.NONE),
    dup2(0x5cu, OpCodeArgs.NONE),
    dup2_x1(0x5du, OpCodeArgs.NONE),
    dup2_x2(0x5eu, OpCodeArgs.NONE),
    f2d(0x8du, OpCodeArgs.NONE),
    f2i(0x8bu, OpCodeArgs.NONE),
    f2l(0x8cu, OpCodeArgs.NONE),
    fadd(0x62u, OpCodeArgs.NONE),
    faload(0x30u, OpCodeArgs.NONE),
    fastore(0x51u, OpCodeArgs.NONE),
    fcmpg(0x96u, OpCodeArgs.NONE),
    fcmpl(0x95u, OpCodeArgs.NONE),
    fconst_0(0x0bu, OpCodeArgs.NONE),
    fconst_1(0x0cu, OpCodeArgs.NONE),
    fconst_2(0x0du, OpCodeArgs.NONE),
    fdiv(0x6eu, OpCodeArgs.NONE),
    fload(0x17u, OpCodeArgs.LOCAL_VARIABLE_INDEX),
    fload_0(0x22u, OpCodeArgs.NONE),
    fload_1(0x23u, OpCodeArgs.NONE),
    fload_2(0x24u, OpCodeArgs.NONE),
    fload_3(0x25u, OpCodeArgs.NONE),
    fmul(0x6au, OpCodeArgs.NONE),
    fneg(0x76u, OpCodeArgs.NONE),
    frem(0x72u, OpCodeArgs.NONE),
    freturn(0xaeu, OpCodeArgs.NONE),
    fstore(0x38u, OpCodeArgs.LOCAL_VARIABLE_INDEX),
    fstore_0(0x43u, OpCodeArgs.NONE),
    fstore_1(0x44u, OpCodeArgs.NONE),
    fstore_2(0x45u, OpCodeArgs.NONE),
    fstore_3(0x46u, OpCodeArgs.NONE),
    fsub(0x66u, OpCodeArgs.NONE),
    getfield(0xb4u, OpCodeArgs.CONSTANT_POOL_INDEX),
    getstatic(0xb2u, OpCodeArgs.CONSTANT_POOL_INDEX),
    goto(0xa7u, OpCodeArgs.BRANCH_OFFSET),
    goto_w(0xc8u, OpCodeArgs.BRANCH_OFFSET_WIDE),
    i2b(0x91u, OpCodeArgs.NONE),
    i2c(0x92u, OpCodeArgs.NONE),
    i2d(0x87u, OpCodeArgs.NONE),
    i2f(0x86u, OpCodeArgs.NONE),
    i2l(0x85u, OpCodeArgs.NONE),
    i2s(0x93u, OpCodeArgs.NONE),
    iadd(0x60u, OpCodeArgs.NONE),
    iaload(0x2eu, OpCodeArgs.NONE),
    iand(0x7eu, OpCodeArgs.NONE),
    iastore(0x4fu, OpCodeArgs.NONE),
    iconst_m1(0x02u, OpCodeArgs.NONE),
    iconst_0(0x03u, OpCodeArgs.NONE),
    iconst_1(0x04u, OpCodeArgs.NONE),
    iconst_2(0x05u, OpCodeArgs.NONE),
    iconst_3(0x06u, OpCodeArgs.NONE),
    iconst_4(0x07u, OpCodeArgs.NONE),
    iconst_5(0x08u, OpCodeArgs.NONE),
    idiv(0x6cu, OpCodeArgs.NONE),
    if_acmpeq(0xa5u, OpCodeArgs.BRANCH_OFFSET),
    if_acmpne(0xa6u, OpCodeArgs.BRANCH_OFFSET),
    if_icmpeq(0x9fu, OpCodeArgs.BRANCH_OFFSET),
    if_icmpne(0xa0u, OpCodeArgs.BRANCH_OFFSET),
    if_icmplt(0xa1u, OpCodeArgs.BRANCH_OFFSET),
    if_icmpge(0xa2u, OpCodeArgs.BRANCH_OFFSET),
    if_icmpgt(0xa3u, OpCodeArgs.BRANCH_OFFSET),
    if_icmple(0xa4u, OpCodeArgs.BRANCH_OFFSET),
    ifeq(0x99u, OpCodeArgs.BRANCH_OFFSET),
    ifne(0x9au, OpCodeArgs.BRANCH_OFFSET),
    iflt(0x9bu, OpCodeArgs.BRANCH_OFFSET),
    ifge(0x9cu, OpCodeArgs.BRANCH_OFFSET),
    ifgt(0x9du, OpCodeArgs.BRANCH_OFFSET),
    ifle(0x9eu, OpCodeArgs.BRANCH_OFFSET),
    ifnonnull(0xc7u, OpCodeArgs.BRANCH_OFFSET),
    ifnull(0xc6u, OpCodeArgs.BRANCH_OFFSET),
    iinc(0x84u, OpCodeArgs.INDEX_CONST),
    iload(0x15u, OpCodeArgs.LOCAL_VARIABLE_INDEX),
    iload_0(0x1au, OpCodeArgs.NONE),
    iload_1(0x1bu, OpCodeArgs.NONE),
    iload_2(0x1cu, OpCodeArgs.NONE),
    iload_3(0x1du, OpCodeArgs.NONE),
    imul(0x68u, OpCodeArgs.NONE),
    ineg(0x74u, OpCodeArgs.NONE),
    instance_of(0xc1u, OpCodeArgs.CONSTANT_POOL_INDEX),
    invokedynamic(0xbau, OpCodeArgs.CONSTANT_POOL_INDEX_THEN_TWO_ZEROES),
    invokeinterface(0xb9u, OpCodeArgs.CONSTANT_POOL_INDEX_THEN_COUNT_THEN_ZERO),
    invokespecial(0xb7u, OpCodeArgs.CONSTANT_POOL_INDEX),
    invokestatic(0xb8u, OpCodeArgs.CONSTANT_POOL_INDEX),
    invokevirtual(0xb6u, OpCodeArgs.CONSTANT_POOL_INDEX),
    ior(0x80u, OpCodeArgs.NONE),
    irem(0x70u, OpCodeArgs.NONE),
    ireturn(0xacu, OpCodeArgs.NONE),
    ishl(0x78u, OpCodeArgs.NONE),
    ishr(0x7au, OpCodeArgs.NONE),
    istore(0x36u, OpCodeArgs.LOCAL_VARIABLE_INDEX),
    istore_0(0x3bu, OpCodeArgs.NONE),
    istore_1(0x3cu, OpCodeArgs.NONE),
    istore_2(0x3du, OpCodeArgs.NONE),
    istore_3(0x3eu, OpCodeArgs.NONE),
    isub(0x64u, OpCodeArgs.NONE),
    iushr(0x7cu, OpCodeArgs.NONE),
    ixor(0x82u, OpCodeArgs.NONE),
    jsr(0xa8u, OpCodeArgs.BRANCH_OFFSET),
    jsr_w(0xc9u, OpCodeArgs.BRANCH_OFFSET_WIDE),
    l2d(0x8au, OpCodeArgs.NONE),
    l2f(0x89u, OpCodeArgs.NONE),
    l2i(0x88u, OpCodeArgs.NONE),
    ladd(0x61u, OpCodeArgs.NONE),
    laload(0x2fu, OpCodeArgs.NONE),
    land(0x7fu, OpCodeArgs.NONE),
    lastore(0x50u, OpCodeArgs.NONE),
    lcmp(0x94u, OpCodeArgs.NONE),
    lconst_0(0x09u, OpCodeArgs.NONE),
    lconst_1(0x0au, OpCodeArgs.NONE),
    ldc(0x12u, OpCodeArgs.CONSTANT_POOL_INDEX_SHORT),
    ldc_w(0x13u, OpCodeArgs.CONSTANT_POOL_INDEX),
    ldc2_w(0x14u, OpCodeArgs.CONSTANT_POOL_INDEX),
    ldiv(0x6du, OpCodeArgs.NONE),
    lload(0x16u, OpCodeArgs.LOCAL_VARIABLE_INDEX),
    lload_0(0x1eu, OpCodeArgs.NONE),
    lload_1(0x1fu, OpCodeArgs.NONE),
    lload_2(0x20u, OpCodeArgs.NONE),
    lload_3(0x21u, OpCodeArgs.NONE),
    lmul(0x69u, OpCodeArgs.NONE),
    lneg(0x75u, OpCodeArgs.NONE),
    lookupswitch(0xabu, OpCodeArgs.LOOKUP_SWITCH),
    lor(0x81u, OpCodeArgs.NONE),
    lrem(0x71u, OpCodeArgs.NONE),
    lreturn(0xadu, OpCodeArgs.NONE),
    lshl(0x79u, OpCodeArgs.NONE),
    lshr(0x7bu, OpCodeArgs.NONE),
    lstore(0x37u, OpCodeArgs.LOCAL_VARIABLE_INDEX),
    lstore_0(0x3fu, OpCodeArgs.NONE),
    lstore_1(0x40u, OpCodeArgs.NONE),
    lstore_2(0x41u, OpCodeArgs.NONE),
    lstore_3(0x42u, OpCodeArgs.NONE),
    lsub(0x65u, OpCodeArgs.NONE),
    lushr(0x7du, OpCodeArgs.NONE),
    lxor(0x83u, OpCodeArgs.NONE),
    monitorenter(0xc2u, OpCodeArgs.NONE),
    monitorexit(0xc3u, OpCodeArgs.NONE),
    multianewarray(0xc5u, OpCodeArgs.CONSTANT_POOL_INDEX_THEN_DIMENSIONS),
    new(0xbbu, OpCodeArgs.CONSTANT_POOL_INDEX),
    newarray(0xbcu, OpCodeArgs.ARRAY_TYPE),
    nop(0x00u, OpCodeArgs.NONE),
    pop(0x57u, OpCodeArgs.NONE),
    pop2(0x58u, OpCodeArgs.NONE),
    putfield(0xb5u, OpCodeArgs.CONSTANT_POOL_INDEX),
    putstatic(0xb3u, OpCodeArgs.CONSTANT_POOL_INDEX),
    ret(0xa9u, OpCodeArgs.LOCAL_VARIABLE_INDEX),
    `return`(0xb1u, OpCodeArgs.NONE),
    saload(0x35u, OpCodeArgs.NONE),
    sastore(0x56u, OpCodeArgs.NONE),
    sipush(0x11u, OpCodeArgs.SHORT_VALUE),
    swap(0x5fu, OpCodeArgs.NONE),
    tableswitch(0xaau, OpCodeArgs.TABLE_SWITCH),
    wide(0xc4u, OpCodeArgs.WIDE);
}
